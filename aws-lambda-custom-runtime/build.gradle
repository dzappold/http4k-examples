buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "${kotlinVersion}"
}

apply plugin: "com.github.johnrengelman.shadow"

repositories {
    mavenCentral()
}

compileKotlin.kotlinOptions.jvmTarget = "21"
compileTestKotlin.kotlinOptions.jvmTarget = "21"

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib")
    implementation(platform("org.http4k:http4k-bom:${http4kVersion}"))
    implementation("org.http4k:http4k-core")
    implementation("org.http4k:http4k-serverless-lambda")
    implementation("org.http4k:http4k-serverless-lambda-runtime")

    testImplementation(platform("org.junit:junit-bom:${junitVersion}"))
    testImplementation("org.http4k:http4k-testing-hamkrest")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")
}

test {
    useJUnitPlatform()
}

shadowJar {
    manifest.attributes['Main-Class'] = 'org.http4k.example.MyHttp4kFunctionKt'
    archiveBaseName.set("http4k-lambda")
    archiveClassifier.set(null)
    archiveVersion.set(null)
    mergeServiceFiles()
    minimize()
}

